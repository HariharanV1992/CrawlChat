name: Build and Deploy Lambda Container

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: crawlchat-api
  LAMBDA_FUNCTION_NAME: crawlchat-api-function

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build, tag, and push image to Amazon ECR
      id: build
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build the Docker image
        docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Push to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    - name: Update Lambda function
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --image-uri ${{ steps.build.outputs.image }} \
          --region ${{ env.AWS_REGION }}
    
    - name: Wait for Lambda update
      run: |
        aws lambda wait function-updated \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --region ${{ env.AWS_REGION }}
    
    - name: Update Lambda environment variables
      run: |
        # Read environment variables from lambda_env.json
        ENV_VARS=$(cat lambda_env.json | jq -r '.Variables | to_entries | map("\(.key)=\(.value)") | join(" ")')
        
        # Update Lambda function configuration with environment variables
        aws lambda update-function-configuration \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --environment Variables="$ENV_VARS" \
          --region ${{ env.AWS_REGION }}
        
        echo "‚úÖ Environment variables updated successfully!"
    
    - name: Deployment complete
      run: |
        echo "‚úÖ Lambda function updated successfully!"
        echo "üîó Function: ${{ env.LAMBDA_FUNCTION_NAME }}"
        echo "üñºÔ∏è  Image: ${{ steps.build.outputs.image }}"
        echo "üöÄ OCR capabilities are now available for document processing" 